# Podfile
# replace UIKitCatalog with your target
target 'UIKitCatalog' do
  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for UIKitCatalog
  	# *** Recommended minimum: All modules in this section are recommended. Only disable if you're sure you don't need them.  *** #

  	# All pods depend on Core. Supports all platforms.
	pod "tealium-swift/Core"
	# All platforms. Provides important info about the app bundle.
	pod "tealium-swift/TealiumAppData"
	# All platforms. Sends data to UDH.
	pod "tealium-swift/TealiumCollect"
	# All platforms. Assists with GDPR/privacy compliance.
	pod "tealium-swift/TealiumConsentManager"
	# iOS, macOS, tvOS only. Detects connectivity state and queues track calls while offline. Should be used in conjunction with TealiumDispatchQueue module. 
	pod "tealium-swift/TealiumConnectivity"
	# All platforms. Adds "tealium_datasource" to each dispatch, and extends TealiumConfig class.
	pod "tealium-swift/TealiumDataSource"
	# All platforms. Stores persistent data to UserDefaults. Bundles PersistentData module. Should not be used if FileStorage module is in use.
	pod "tealium-swift/TealiumDefaultsStorage"	
	# All platforms. Enables the use of delegate functionality and completion handlers on the Tealium class.
	pod "tealium-swift/TealiumDelegate"
	# All platforms. Adds information about the device to each dispatch.
	pod "tealium-swift/TealiumDeviceData"
	# All platforms. Enables offline storage of queued events (required for Consent, Connectivity).
	pod "tealium-swift/TealiumDispatchQueue"
	# All platforms. Collects information about the app lifecycle and adds to each dispatch.
	pod "tealium-swift/TealiumLifecycle"
	# All platforms. Enables logging information to the LLDB console.
	pod "tealium-swift/TealiumLogger"
	# iOS only. Used in conjunction with TagManagement module to trigger Remote Commands
	pod "tealium-swift/TealiumRemoteCommands"
	# iOS only. Enables Tealium iQ Tag Management.
	pod "tealium-swift/TealiumTagManagement"
	# All platforms. Adds important data to each dispatch, and enables temporary storage of data for the current session.
	pod "tealium-swift/TealiumVolatileData"

	# *** Optional modules: You may not need these modules. Enable as required.   *** #

	# iOS Only. Gathers app attribution data and advertising IDs.
	# pod "tealium-swift/TealiumAttribution"

	# iOS and tvOS only. Generally not recommended. See separate notes in module documentation.
	# pod "tealium-swift/TealiumAutotracking"

	# All platforms. Stores persistent data to File Storage. Bundles PersistentData module. Should not be used if DefaultsStorage module is in use. Pick the option that best suits you.
	# pod "tealium-swift/TealiumFileStorage"

	# iOS only. Reports detailed crash information. Will install separate TealiumCrashReporter dependency (based on PLCrashReporter).
	# pod "tealium-swift/Crash"
	
end


target 'WatchApp Extension' do
  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for Watch App Extension
	pod "tealium-swift/Core"
	pod "tealium-swift/TealiumAppData"
	pod "tealium-swift/TealiumCollect"
	pod "tealium-swift/TealiumConsentManager"
	pod "tealium-swift/TealiumDataSource"
	pod "tealium-swift/TealiumDefaultsStorage"	
	pod "tealium-swift/TealiumDelegate"
	pod "tealium-swift/TealiumDeviceData"
	pod "tealium-swift/TealiumDispatchQueue"
	# pod "tealium-swift/TealiumFileStorage"
	pod "tealium-swift/TealiumLifecycle"
	pod "tealium-swift/TealiumLogger"
	pod "tealium-swift/TealiumVolatileData"
end

target 'TVApp' do
  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for TVApp
	pod "tealium-swift/Core"
	pod "tealium-swift/TealiumAppData"
	pod "tealium-swift/TealiumAutotracking"
	pod "tealium-swift/TealiumCollect"
	pod "tealium-swift/TealiumConsentManager"
	pod "tealium-swift/TealiumConnectivity"
	pod "tealium-swift/TealiumDataSource"
	pod "tealium-swift/TealiumDefaultsStorage"	
	pod "tealium-swift/TealiumDelegate"
	pod "tealium-swift/TealiumDeviceData"
	pod "tealium-swift/TealiumDispatchQueue"
	# pod "tealium-swift/TealiumFileStorage"
	pod "tealium-swift/TealiumLifecycle"
	pod "tealium-swift/TealiumLogger"
	pod "tealium-swift/TealiumVolatileData"
end

target 'MacOSApp' do
  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for MacOSApp
	pod "tealium-swift/Core"
	pod "tealium-swift/TealiumAppData"
	pod "tealium-swift/TealiumCollect"
	pod "tealium-swift/TealiumConsentManager"
	pod "tealium-swift/TealiumConnectivity"
	pod "tealium-swift/TealiumDataSource"
	pod "tealium-swift/TealiumDefaultsStorage"	
	pod "tealium-swift/TealiumDelegate"
	pod "tealium-swift/TealiumDeviceData"
	pod "tealium-swift/TealiumDispatchQueue"
	# pod "tealium-swift/TealiumFileStorage"
	pod "tealium-swift/TealiumLifecycle"
	pod "tealium-swift/TealiumLogger"
	pod "tealium-swift/TealiumVolatileData"
end