name: Builds for Various Architectures

on: [pull_request]

jobs:
  build_iOS:
    name: Build iOS
    runs-on: macos-13
    timeout-minutes: 60
    env: 
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./builder
    strategy:
      matrix:
        destination: ["platform=iOS Simulator,name=iPhone 15"]
        scheme: 
          - TealiumCore
          - TealiumCollect
          - TealiumLifecycle
          - TealiumVisitorService
          - TealiumLocation
          - TealiumMedia
          - TealiumRemoteCommands
          - TealiumTagManagement
          - TealiumAttribution
          - TealiumAutotracking
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build iOS - ${{ matrix.scheme }}
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project tealium-swift.xcodeproj -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_macOS:
    name: Build macOS
    runs-on: macos-13
    timeout-minutes: 60
    env: 
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./builder
    strategy:
      matrix:
        destination: ["platform=macOS,arch=x86_64"]
        scheme: 
          - TealiumCore
          - TealiumCollect
          - TealiumLifecycle
          - TealiumMedia
          - TealiumVisitorService
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build macOS - ${{ matrix.scheme }}
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project tealium-swift.xcodeproj -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_tvOS:
    name: Build tvOS
    runs-on: macos-13
    timeout-minutes: 60
    env: 
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./builder
    strategy:
      matrix:
        destination: ["platform=tvOS Simulator,name=Apple TV"]
        scheme: 
          - TealiumCore
          - TealiumCollect
          - TealiumLifecycle
          - TealiumMedia
          - TealiumVisitorService
    steps:
      - uses: actions/checkout@v2
      - name: Build tvOS - ${{ matrix.scheme }}
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild -project tealium-swift.xcodeproj -scheme "${{ matrix.scheme }}" -destination "${{ matrix.destination }}" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_TealiumSwiftExample_iOS:
    name: Build TealiumSwiftExample iOS
    runs-on: macos-13
    timeout-minutes: 60
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./samples/TealiumSwiftExample
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build TealiumSwiftExample iOS
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean  -scheme "TealiumSwiftExample" -destination "platform=iOS Simulator,name=iPhone 15" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && pod install && env NSUnbufferedIO=YES xcodebuild -workspace TealiumSwiftExample.xcworkspace -scheme "TealiumSwiftExample" -destination "platform=iOS Simulator,name=iPhone 15" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_TealiumSwiftExample_tvOS:
    name: Build TealiumSwiftExample tvOS
    runs-on: macos-13
    timeout-minutes: 60
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./samples/TealiumSwiftExample
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build TealiumSwiftExample tvOS
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean  -scheme "TealiumSwiftExample" -destination "platform=iOS Simulator,name=iPhone 15" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && pod install && env NSUnbufferedIO=YES xcodebuild -workspace TealiumSwiftExample.xcworkspace -scheme "TealiumSwiftTVExample" -destination "platform=tvOS Simulator,name=Apple TV" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_ConsentManagerDemo:
    name: Build ConsentManagerDemo
    runs-on: macos-13
    timeout-minutes: 60
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./samples/ConsentManagerDemo
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build ConsentManagerDemo iOS
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean -scheme "ConsentManagerDemo" -destination "platform=iOS Simulator,name=iPhone 15" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && pod install && env NSUnbufferedIO=YES xcodebuild -workspace ConsentManagerDemo.xcworkspace -scheme "ConsentManagerDemo" -destination "platform=iOS Simulator,name=iPhone 15" clean build | xcpretty
        working-directory: ${{ env.working-directory }}
  build_VisitorServiceDemo:
    name: Build TealiumVisitorProfileDemo
    runs-on: macos-13
    timeout-minutes: 60
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./samples/VisitorServiceDemo
    steps:
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v2
      - name: Build TealiumVisitorProfileDemo iOS
        run: |
          MAX_ATTEMPT=10
          ATTEMPT=0
          while [ -z $SUCCESS ] && [ "$ATTEMPT" -le "$MAX_ATTEMPT" ]; do
            xcodebuild clean -scheme "TealiumVisitorProfileDemo" -destination "platform=iOS Simulator,name=iPhone 15" | grep -q "CLEAN SUCCEEDED" && SUCCESS=true
            ATTEMPT=$(($ATTEMPT+1))
          done
          set -o pipefail && pod install && env NSUnbufferedIO=YES xcodebuild -workspace TealiumVisitorProfileDemo.xcworkspace -scheme "TealiumVisitorProfileDemo" -destination "platform=iOS Simulator,name=iPhone 15" clean build | xcpretty
        working-directory: ${{ env.working-directory }}                                          
